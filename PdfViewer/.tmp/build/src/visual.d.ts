import 'regenerator-runtime/runtime';
import "./../style/visual.less";
import powerbi from "powerbi-visuals-api";
import VisualConstructorOptions = powerbi.extensibility.visual.VisualConstructorOptions;
import VisualUpdateOptions = powerbi.extensibility.visual.VisualUpdateOptions;
import IVisual = powerbi.extensibility.visual.IVisual;
import EnumerateVisualObjectInstancesOptions = powerbi.EnumerateVisualObjectInstancesOptions;
import VisualObjectInstance = powerbi.VisualObjectInstance;
import VisualObjectInstanceEnumerationObject = powerbi.VisualObjectInstanceEnumerationObject;
export declare class Visual implements IVisual {
    private target;
    private pdfContainer;
    private context;
    private canvas;
    private headerContainer;
    private settings;
    private base64encodedString;
    private loadingTask;
    private renderTask;
    private pageNumber;
    private numberOfPages;
    private rightArrow;
    private leftArrow;
    private pageIndicator;
    private pageIndicatorSpan;
    private zoomPlus;
    private zoomMinus;
    private zoomResetter;
    private zoomIndicatorSpan;
    private zoomIndicator;
    private headerIconHeight;
    private headerPadding;
    private warningText;
    private options;
    private scrollOverflow;
    private headerIsPresentable;
    private zoomLevel;
    constructor(options: VisualConstructorOptions);
    update(options: VisualUpdateOptions): void;
    createHeaderContainer(self: any, options: VisualConstructorOptions): void;
    createPdfContainer(): void;
    toggleScrollOverflow(): void;
    toggleHeaderVisibility(): void;
    createZoomImages(): void;
    createWarningTextNode(): void;
    evaluateArrowImages(): void;
    convertDataURIToBinary(dataURI: string): Uint8Array;
    private static parseSettings;
    enumerateObjectInstances(options: EnumerateVisualObjectInstancesOptions): VisualObjectInstance[] | VisualObjectInstanceEnumerationObject;
}
